@model IEnumerable<FixedModules.Models.Fixed_Asset_Register>
@{ ViewData["Title"] = "Purchases Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<style>
    #searchData .rotated {
        width: 100%;
        color: white;
        margin: 0 auto;
        background: #398fea;
        text-align: center;
    }

    tbody tr:hover {
        cursor: pointer;
    }
</style>

<style type="text/css" media="only screen and (min-width: 1050px)">
    #searchData .triangle-topleft {
        width: 0;
        height: 0;
        border-top: 90px solid #398fea;
        border-right: 90px solid transparent;
        position: absolute;
    }

    #searchData .rotated {
        transform: rotate(-45deg);
        -webkit-transform: rotate(-45deg);
        -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
        -o-transform: rotate(-45deg);
        width: 120px;
        color: white;
        font-weight: bold;
        background-color: #398fea;
        text-align: center;
        position: absolute;
        margin-top: 26px;
        margin-left: -30px;
        background: transparent;
    }
</style>

<div class="content-i">
    <div class="content-box">
        <div class="element-wrapper">
            <input type="button" id="btnExport" value="Export" />
            <div class="element-box">

                <br>

                <div class="table-responsive">
                    @if (ViewBag.error == "Code exists")
                    {
        @Html.Raw("<div class=\"alert alert-danger\" role=\"alert\">Code already exists!</div>");
    }
                    <table id="zero_config" class="table table-bordered table-lg table-v2 table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.AssetCode)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AssetName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PurchaseDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AssetCategory)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.StatusValue)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AssetType)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CreatedBy)
                                </th>

                            </tr>
                        </thead>
                        <tbody id="tableItems">
                            @foreach (var item in Model)
                            {
                <tr id="@item.Id" editable="@item.CreationStatus">
                    <th>
                        @item.AssetCode
                    </th>
                    <th>
                        @item.AssetName
                    </th>
                    <th>
                        @item.PurchaseDate
                    </th>
                    <th>
                        @item.AssetCategory
                    </th>
                    <th>
                        @item.StatusValue
                    </th>
                    <th>
                        @item.AssetType
                    </th>
                    <th>
                        @item.CreatedBy
                    </th>




                </tr>
}
                        </tbody>
                    </table>
                </div>

                <br /><br />
            </div>





        </div>
    </div>
</div>

<input type="button" id="btnExport" value="Export" />
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.22/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
<script type="text/javascript">
    $("body").on("click", "#btnExport", function () {
        html2canvas($('#zero_config')[0], {
            onrendered: function (canvas) {
                var data = canvas.toDataURL();
                var docDefinition = {
                    content: [{
                        image: data,
                        width: 500
                    }]
                };
                //pdfMake.createPdf(docDefinition).print("preview.pdf");
                pdfMake.createPdf(docDefinition).open({}, window);

            }
        });
    });
</script>